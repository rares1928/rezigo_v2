{"version":3,"sources":["poze/test_v4.svg","poze/librarie_v5.svg","poze/grupuri_v1.svg","poze/profil_v1.svg","poze/premium_v1.svg","componente/homeCard.js","pagini/homePage.js","pagini/librariePage.js","poze/test_nou_v2.svg","poze/simulare_v1.svg","poze/test_neterminat_v2.svg","poze/reparcurge_greseli_v2.svg","poze/kumar.svg","poze/lawrence.svg","poze/sinopsis.svg","componente/testsCard.js","componente/testsBookCard.js","componente/subcategoryCard.js","componente/categoryAcordion.js","componente/tabel.js","utils/callApi.js","componente/errorPopup.js","pagini/testePage.js","pagini/noMatch.js","componente/answerOptionCard.js","pagini/grilePage.js","poze/logo4.svg","pagini/loginPage.js","pagini/signupPage.js","componente/layoutSite.js","pagini/profilePage.js","utils/protectedRoute.js","pagini/despreNoi.js","pagini/termeni.js","pagini/intrebari.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","display","flexDirection","borderRadius","media","height","maxHeight","textSide","padding","spacing","title","margin","HomeCard","props","classes","Card","className","CardActionArea","href","sendTo","CardMedia","image","imagine","CardContent","Typography","gutterBottom","variant","component","color","text","paddingTop","paddingBottom","footer","backgroundColor","palette","primary","main","footerItem","HomePage","Container","Grid","justify","container","item","test","librarie","grupuri","profil","premium","direction","Link","IconButton","fontSize","LibrariePage","TestsCard","isSelected","secondary","background","paper","minHeight","lowerPart","onClick","ms","setCardSelected","ready","Promise","resolve","setTimeout","then","document","getElementById","scrollIntoView","TestsBookCard","justifyContent","mediaImg","textAlign","src","alt","SubcategoryCard","marginBottom","cardActionArea","listaselectiisubcat","index","indexSub","cardAction","width","input","onClickSubCategorie","CardActions","disableSpacing","Input","value","onChange","event","target","Number","number","inputProps","step","min","max","type","titles","alignItems","subCatDiv","subCat","CategoryAcordion","data","map","categorie","book","Accordion","AccordionSummary","expandIcon","aria-label","aria-controls","id","Checkbox","checked","reduce","acc","onClickCategorieMare","stopPropagation","onFocus","category_Name","AccordionDetails","subCategorie","setListaselectiisubcat","BasicTable","rows","onDelete","body","header","TableContainer","style","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","TestID","scope","CreatedAt","NumAnswered","NumUnanswered","Score","Done","callApi","url","handle","handleError","a","cookies","Cookies","token","get","config","withCredentials","headers","Authorization","axios","post","response","set","path","status","ErrorPopup","history","useHistory","Dialog","open","errorStatus","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","0","401","403","500","DialogActions","Button","remove","push","delogare","containerPart","flex","cardGrid","instructionsText","bookDiv","bookLevel","alignContent","minWidth","bookSubcatDiv","marginTop","position","bottom","footerButton","TestePage","useState","isCardSelected","isKumar","setKumar","isLawrence","setLawerence","isSinopsis","setSinopsis","listaselectii","setListaselectii","setReady","listaCategorii","setListaCategorii","listatTesteNeterm","setListaTesteNeterm","error","setError","growTimeout","e","handleCategorii","handleTeste","handleTestId","testId","pathname","state","useEffect","rememberMe","lista_temp","lista_temp2","i","length","lista_temp_temp","j","subCategory","lista_temp_selectii","lista_temporara_mare","lista_temporara","subcat","Count","click","numGrile","sumaElemArr","array","subArray","subAcc","testNouImg","simulareImg","testNeterminatImg","reparcurgeGreseliImg","Grow","in","timeout","kumar","lawrence","sinopsis","CircularProgress","deleteTest","Slide","lista_categorii","nume_categorie","nume_subcategorie","numar","creeazaTest","NoMatch","AnswerOptionCard","darkMode","answerOption","baza2Converter","items","selectedQuestion","disabled","handleQuestionSelection","GrilePage","setNextQuestion","isQuestionSelected","setIsSelected","setItems","isReady","useLocation","showAnswer","setShowAnswer","handleItems","handleNextQuestion","temporaryList","pozitie","parseInt","Math","pow","smallPaper","question","cardVariante","butonDiv","slider","Paper","Slider","_event","newValue","marks","valueLabelDisplay","listaRaspunsuri","currentQuestion","choice","tempItems","correct","grilaId","final_question","slice","trimiteRaspuns","b","statisticSubdiv","Switch","val","logoBox","paddingLeft","form","submit","SignIn","cookieRemember","email","setEmail","password","setPassword","apare_aicont","setapare_aicont","setRememberMe","callLoginApi","tip_login","handleLogin","rememberMeSeconds","firstname","lastname","plan","accessToken","maxAge","CssBaseline","Box","logo","noValidate","TextField","required","fullWidth","label","name","autoComplete","autoFocus","onInput","onKeyPress","key","FormControlLabel","control","xs","avatar","SignUp","firstName","setFirstName","lastName","setLastName","repeatPassword","setRepeatPassword","incompleteFields","setIncompleteFields","errorPwd","setErrorPwd","console","log","sm","rootNavBar","logoGroup","flexGrow","cursor","menuButton","menuButtonTel","list","fullList","LayoutSite","location","mobileView","setMobileView","React","deschis","setDeschis","toggleDrawer","anchor","setResponsiveness","window","innerWidth","addEventListener","removeEventListener","includes","AppBar","elevation","Toolbar","Drawer","onClose","clsx","role","onKeyDown","ButtonGroup","orientation","disableElevation","setDarkMode","localStorage","setItem","startIcon","displayMobileView","children","ProfilePage","ProtectedRoute","cookie","render","to","DespreNoi","Termeni","Intrebari","App","getItem","createMuiTheme","typography","button","textTransform","divider","default","contrastText","ThemeProvider","exact","LoginPage","SignupPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.79f1551d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/test_v4.b9bd5738.svg\";","export default __webpack_public_path__ + \"static/media/librarie_v5.3a41ed8f.svg\";","export default __webpack_public_path__ + \"static/media/grupuri_v1.2d452f34.svg\";","export default __webpack_public_path__ + \"static/media/profil_v1.7c08fc96.svg\";","export default __webpack_public_path__ + \"static/media/premium_v1.12c2d301.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {\r\n    maxWidth: 400,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    borderRadius: 15,\r\n  },\r\n  media: {\r\n    height: \"30vh\",\r\n    maxHeight: \"250px\",\r\n  },\r\n  textSide:{\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    padding: theme.spacing(2, 2, 2),\r\n  },\r\n  title: {\r\n      margin: theme.spacing(1,3,0),\r\n  }\r\n}));\r\n\r\nexport default function HomeCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n        <CardActionArea href={props.sendTo}>\r\n            <CardMedia \r\n                className={classes.media}\r\n                image={props.imagine}\r\n            />\r\n        </CardActionArea>\r\n        <CardContent className={classes.textSide}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\r\n                {props.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {props.text}\r\n            </Typography>\r\n        </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport test from '../poze/test_v4.svg';\r\nimport librarie from '../poze/librarie_v5.svg';\r\nimport grupuri from '../poze/grupuri_v1.svg';\r\nimport profil from '../poze/profil_v1.svg';\r\nimport premium from '../poze/premium_v1.svg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HomeCard from '../componente/homeCard';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        paddingTop: theme.spacing(6),\r\n        paddingBottom: theme.spacing(6),\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: theme.spacing(1,10,3),\r\n    },\r\n    footerItem: {\r\n        maxWidth: 300,\r\n    }\r\n  }));\r\n\r\nexport default function HomePage() {\r\n    const classes=useStyles();\r\n\r\n    return(\r\n    <>\r\n        <Container className={classes.root} maxWidth=\"lg\">\r\n            <Grid \r\n                justify=\"center\" \r\n                container \r\n                spacing={6} >\r\n                <Grid item>\r\n                    <HomeCard\r\n                        imagine={test}\r\n                        sendTo=\"/creeaza-ti_test\" \r\n                        title=\"Test\"\r\n                        text=\"Creează-ți un test, încearcă-ți puterile cu o simulare sau reparcurge greșelile\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <HomeCard \r\n                        imagine={librarie}\r\n                        sendTo=\"/librarie\"\r\n                        title=\"Librărie\"\r\n                        text=\"învață din materialele speciale, flashcarduri și mnemonics\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <HomeCard \r\n                        imagine={grupuri}\r\n                        sendTo=\"/\"\r\n                        title=\"Grupuri\"\r\n                        text=\"împarte cu prietenii tăi grile, întrebari și nelămuriri\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <HomeCard \r\n                        imagine={profil}\r\n                        sendTo=\"/profil\"\r\n                        title=\"Profil\"\r\n                        text=\"Configurează setări, vezi statistici legate de teste\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <HomeCard \r\n                        imagine={premium}\r\n                        sendTo=\"/\"\r\n                        title=\"Premium\"\r\n                        text=\"Investește în tine! Activează-ți contul premium \"\r\n                    />\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </Container>\r\n        <footer className={classes.footer}>\r\n            <Container maxWidth=\"lg\" >\r\n                <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    spacing={4}\r\n                >\r\n                    <Grid className={classes.footerItem} item>\r\n                        <Typography variant=\"h6\"  gutterBottom>\r\n                            Contact\r\n                        </Typography>\r\n                    <Typography variant=\"p\" component=\"p\">\r\n                        Pentru orice fel intrebări sau sugestii,\r\n                        vă rugam să ne contactați la adresa de mail:\r\n                        rezigo.contact@gmail.com\r\n                    </Typography>\r\n                    </Grid>\r\n                    <Grid container direction=\"column\" className={classes.footerItem} item>\r\n                        <Typography variant=\"h6\"  gutterBottom>\r\n                            Link-uri utile\r\n                        </Typography>\r\n                        <Link color=\"secondary\" href=\"/despre_noi\">Despre noi</Link>\r\n                        <Link color=\"secondary\" href=\"/termeni\">Termeni și condiții</Link>\r\n                        <Link color=\"secondary\" href=\"/intrebari_frecvente\">Întrebări frecvente</Link>\r\n                    </Grid>\r\n                    <Grid className={classes.footerItem} item>\r\n                        <Typography  variant=\"h6\"  gutterBottom>\r\n                            Păstrează legătura\r\n                        </Typography>\r\n                        <IconButton href=\"/\">\r\n                            <FacebookIcon color=\"secondary\"  fontSize=\"large\" />\r\n                        </IconButton>\r\n                        <IconButton href=\"/\">\r\n                            <InstagramIcon color=\"secondary\" fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </footer>\r\n    </>\r\n   );\r\n}","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function LibrariePage() {\r\n    return(\r\n        <Typography variant=\"h2\">Librarie</Typography>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/test_nou_v2.db57b8ef.svg\";","export default __webpack_public_path__ + \"static/media/simulare_v1.abac1607.svg\";","export default __webpack_public_path__ + \"static/media/test_neterminat_v2.bbf3fdd2.svg\";","export default __webpack_public_path__ + \"static/media/reparcurge_greseli_v2.4ad40e13.svg\";","export default __webpack_public_path__ + \"static/media/kumar.7c814cc0.svg\";","export default __webpack_public_path__ + \"static/media/lawrence.9cd9ab15.svg\";","export default __webpack_public_path__ + \"static/media/sinopsis.103f3166.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default function TestsCard(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            maxWidth: 285,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            borderRadius: 15,\r\n\r\n        },\r\n        media: {\r\n            backgroundColor: props.isSelected ? theme.palette.secondary.main : theme.palette.background.paper,\r\n            height: \"20vh\",\r\n            maxHeight: \"200px\",\r\n            minHeight: 150,\r\n        },\r\n        lowerPart: {\r\n            height: 105,\r\n        },\r\n        textSide: {\r\n\r\n        },\r\n        title: {\r\n\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea onClick={() => {\r\n                props.onClick();\r\n                props.setCardSelected(props.title);\r\n                if (props.ready) {\r\n                    sleep(100).then(() => { document.getElementById(\"as vrea sa scrolez aici\").scrollIntoView(true); });\r\n                }\r\n            }}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.imagine}\r\n                />\r\n            </CardActionArea>\r\n            <CardContent className={classes.lowerPart}>\r\n                <Typography gutterBottom variant=\"h6\" component=\"h3\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.textSide}>\r\n                    {props.text}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function TestsBookCard(props) {\r\n\r\n    const useStyles = makeStyles((theme)=>({\r\n        root: {\r\n            \r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            borderRadius: 15,\r\n            \r\n        },\r\n        media: {\r\n            backgroundColor: props.isSelected? theme.palette.secondary.main : theme.palette.background.paper,\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            maxHeight: 250,\r\n        },\r\n        mediaImg: {\r\n            height: \"20vh\",\r\n            minHeight: 150,\r\n        },\r\n        lowerPart:{       \r\n            height: 80,\r\n            textAlign: \"center\",\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n        <CardActionArea onClick={()=>{props.setCardSelected(!props.isSelected)}}>\r\n            <CardMedia className={classes.media}>\r\n                <img src={props.imagine} className={classes.mediaImg} alt=\"\"></img>\r\n            </CardMedia>\r\n        </CardActionArea>\r\n        <CardContent className={classes.lowerPart}>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h3\" className={classes.title}>\r\n                {props.title}\r\n            </Typography>\r\n        </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nexport default function SubcategoryCard(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginBottom: theme.spacing(0.8),\r\n            maxWidth: '100%',\r\n            display: \"flex\",\r\n\r\n        },\r\n        cardActionArea: {\r\n            backgroundColor: props.listaselectiisubcat[props.index][props.indexSub] > 0 ? theme.palette.secondary.main : theme.palette.background.paper,\r\n        },\r\n        cardAction: {\r\n            width: 105,\r\n        },\r\n        input: {\r\n            width: 40,\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const handleInputChange = (event) => {\r\n        if ((event.target.value === '' ? 0 : Number(event.target.value)) > props.number) {\r\n            props.onClickSubCategorie(props.index, props.indexSub, false, props.number);\r\n        }\r\n        else {\r\n            props.onClickSubCategorie(props.index, props.indexSub, false, (event.target.value === '' ? 0 : Number(event.target.value)));\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea\r\n                className={classes.cardActionArea}\r\n                onClick={() => { props.onClickSubCategorie(props.index, props.indexSub, true, 0) }}\r\n            >\r\n                <CardMedia\r\n                    component=\"div\"\r\n                    title={props.text}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle2\" >\r\n                        {props.text}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions disableSpacing className={classes.cardAction}>\r\n                <Input\r\n                    value={props.listaselectiisubcat[props.index][props.indexSub]}\r\n                    onChange={handleInputChange}\r\n                    color=\"secondary\"\r\n                    className={classes.input}\r\n                    inputProps={{\r\n                        step: 1,\r\n                        min: 0,\r\n                        max: props.number,\r\n                        type: 'number',\r\n\r\n                        'aria-labelledby': 'input-slider',\r\n                    }}\r\n                />\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    /{`${props.number}`}\r\n                </Typography>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport SubcategoryCard from './subcategoryCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    titles: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    subCatDiv: {\r\n        flexDirection: \"column\"\r\n    },\r\n    subCat: {\r\n\r\n    },\r\n}));\r\n\r\nexport default function CategoryAcordion(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            {\r\n                props.data.map((categorie, index) => (\r\n                    categorie['book'] === props.book &&\r\n                    <Accordion key={index}>\r\n                        <AccordionSummary\r\n                            key={index}\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-label=\"Expand\"\r\n                            aria-controls={`additional-actions${index}-content`}\r\n                            id={`additional-actions${index}-header`}\r\n                        >\r\n                            <div className={classes.titles}>\r\n                                <Checkbox\r\n                                    checked={props.listaselectiisubcat[index].reduce((acc, value) => acc + value, 0) > 0}\r\n                                    onChange={() => { props.onClickCategorieMare(index) }}\r\n                                    onClick={(event) => event.stopPropagation()}\r\n                                    onFocus={(event) => event.stopPropagation()}\r\n                                />\r\n                                <Typography variant=\"subtitle1\">{categorie.category_Name}</Typography>\r\n                            </div>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.subCatDiv}>\r\n                            {categorie[\"subCategory\"].map((subCategorie, indexSub) => (\r\n                                <div key={`cat${index}_subcat${indexSub}`}>\r\n                                    <SubcategoryCard\r\n                                        onClickSubCategorie={props.onClickSubCategorie}\r\n                                        setListaselectiisubcat={props.setListaselectiisubcat}\r\n                                        listaselectiisubcat={props.listaselectiisubcat}\r\n                                        className={classes.subCat}\r\n                                        key={`cat${index}_subcat${indexSub}`}\r\n                                        text={subCategorie[\"Name\"]}\r\n                                        number={subCategorie[\"Count\"]}\r\n                                        index={index}\r\n                                        indexSub={indexSub}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, makeStyles } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\n\r\n\r\nexport default function BasicTable({ rows, onDelete, onClick }) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        body : {\r\n            paddingTop: theme.spacing(2),\r\n            paddingBottom: theme.spacing(2),\r\n            marginBottom: theme.spacing(4),\r\n        },\r\n        header: {\r\n            backgroundColor: theme.palette.primary.main\r\n        }\r\n    }))\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.body}>\r\n            <TableContainer style={{ maxHeight: \"40vh\" }}>\r\n                <Table stickyHeader aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow >\r\n                            <TableCell className={classes.header}> # </TableCell>\r\n                            <TableCell className={classes.header}> Continuă </TableCell>\r\n                            <TableCell className={classes.header} align=\"center\">Data</TableCell>\r\n                            <TableCell className={classes.header} align=\"center\">Nr. Întrebări</TableCell>\r\n                            <TableCell className={classes.header} align=\"center\">Nr. răspunsuri date</TableCell>\r\n                            <TableCell className={classes.header} align=\"center\">Nr. întrebări rămase</TableCell>\r\n                            <TableCell className={classes.header} align=\"center\">Scor</TableCell>\r\n                            <TableCell className={classes.header} align=\"center\">Terminat</TableCell>\r\n                            <TableCell className={classes.header} align=\"center\">Șterge</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row, index) => (\r\n                            <TableRow key={index} >\r\n                                <TableCell >{index+1}</TableCell>\r\n                                <TableCell component=\"th\" onClick={() => onClick(row.TestID)} scope=\"row\">\r\n                                    <IconButton>\r\n                                    <PlayArrowIcon color=\"secondary\" />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{row.CreatedAt}</TableCell>\r\n                                <TableCell align=\"center\" >{row.NumAnswered + row.NumUnanswered}</TableCell>\r\n                                <TableCell align=\"center\" >{row.NumAnswered}</TableCell>\r\n                                <TableCell align=\"center\" >{row.NumUnanswered}</TableCell>\r\n                                <TableCell align=\"center\" >{row.Score}</TableCell>\r\n                                <TableCell align=\"center\" >{row.Done ? \"Da\" : \"Nu\"}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <IconButton aria-label=\"delete\" onClick={() => onDelete(row.TestID)} >\r\n                                        <DeleteIcon style={{ color: \"#d83838\" }} />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n\r\n    );\r\n}","import Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\n\r\nexport const callApi = async (url, data, handle, handleError) => {\r\n    const cookies = new Cookies();\r\n    const token = cookies.get('accessToken');\r\n    const config = {\r\n        withCredentials: true,\r\n        headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n    try {\r\n        const response = await axios.post(url, data, config)\r\n        if (response.data) {\r\n            if (\"token\" in response.data) {\r\n                cookies.set('accessToken', token, { path: \"/\" })\r\n            }\r\n            handle(response)\r\n        }\r\n    } catch (err) { handleError(err.response.status) }\r\n};","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Cookies from 'universal-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function ErrorPopup(props) {\r\n    let history = useHistory();\r\n    const delogare = () => {\r\n        const cookies = new Cookies();\r\n        cookies.remove('estiLogat');\r\n        cookies.remove('accessToken');\r\n        cookies.remove('plan');\r\n        cookies.remove('firstname');\r\n        cookies.remove('lastname');\r\n        history.push('/login')\r\n    };\r\n    \r\n    const dictionarText = {\r\n        0 : \"Erroare Test\",\r\n        401 : \"A apărut o eroare de conectivitate. Te rugăm să te autentifici din nou.\",\r\n        403 : \"Acest cont este momentan folosit de pe alt dsipozitiv. În cazul în care nu recunoști această autentificare, te rugăm să îți schimbi parola. Dacă vrei să folosești în continuare aplicația de pe acest device, te rugăm să te autentifici din nou.\",\r\n        500 : \"Se pare că serverul nostru are o problema momentan, te rugăm să încerci din nou mai târziu.\",\r\n    }\r\n    return(\r\n        <Dialog\r\n            open={props.errorStatus>0? true: false}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                Eroare: {props.errorStatus}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n                {dictionarText[props.errorStatus]}\r\n            </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n\r\n            <Button onClick={()=> delogare()} variant=\"contained\" color=\"secondary\" >\r\n                Delogare\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport testNouImg from '../poze/test_nou_v2.svg';\r\nimport simulareImg from '../poze/simulare_v1.svg';\r\nimport testNeterminatImg from '../poze/test_neterminat_v2.svg';\r\nimport reparcurgeGreseliImg from '../poze/reparcurge_greseli_v2.svg';\r\nimport kumar from '../poze/kumar.svg';\r\nimport lawrence from '../poze/lawrence.svg';\r\nimport sinopsis from '../poze/sinopsis.svg';\r\nimport TestsCard from '../componente/testsCard';\r\nimport TestsBookCard from '../componente/testsBookCard';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CategoryAcordion from '../componente/categoryAcordion';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport DataTable from \"../componente/tabel\";\r\nimport Cookies from 'universal-cookie';\r\nimport { callApi } from \"../utils/callApi\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport ErrorPopup from '../componente/errorPopup';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minHeight: \"calc(100vh - calc(8 * 8px))\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    containerPart: {\r\n        flex: 1,\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    instructionsText: {\r\n        padding: theme.spacing(2, 0, 0)\r\n    },\r\n    bookDiv: {\r\n        marginBottom: theme.spacing(11),\r\n\r\n    },\r\n    bookLevel: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignContent: \"center\",\r\n        minWidth: 340,\r\n        maxWidth: 389,\r\n\r\n    },\r\n    bookSubcatDiv: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        paddingBottom: \"2.5vh\",\r\n        paddingTop: \"2.5vh\",\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n    },\r\n    footerItem: {\r\n        maxWidth: 300,\r\n    },\r\n    footerButton: {\r\n        padding: theme.spacing(1.5),\r\n    },\r\n}));\r\n\r\nexport default function TestePage() {\r\n\r\n    const classes = useStyles();\r\n    const [isCardSelected, setCardSelected] = useState(\"\");\r\n    const [isKumar, setKumar] = useState(false);\r\n    const [isLawrence, setLawerence] = useState(false);\r\n    const [isSinopsis, setSinopsis] = useState(false);\r\n    const [listaselectiisubcat, setListaselectiisubcat] = useState([{}]);\r\n    const [listaselectii, setListaselectii] = useState([]);\r\n    const [ready, setReady] = useState(false);\r\n    const [listaCategorii, setListaCategorii] = useState([])\r\n    const [listatTesteNeterm, setListaTesteNeterm] = useState([])\r\n    const [error, setError] = useState(0);\r\n    // delay la grow in milisecunde\r\n    const growTimeout = 700;\r\n    let history = useHistory();\r\n\r\n    const handleError = (e) => {\r\n        setError(e);\r\n    }\r\n\r\n    const handleCategorii = (e) => {\r\n        setListaCategorii(e.data[\"lista\"]);\r\n    };\r\n\r\n    const handleTeste = (e) => {\r\n        setListaTesteNeterm(e.data[\"lista\"]);\r\n    };\r\n\r\n    const handleTestId = (testId) => {\r\n        return(history.push({ pathname: \"/rezolva_test\", state: testId }));\r\n    };\r\n\r\n    const callApiTestNeterminat = () => {\r\n        const cookies = new Cookies();\r\n        const rememberMe = cookies.get('rememberMe');\r\n        callApi('https://grileapiwin.azurewebsites.net/api/ReturnTestWin?code=a4f9SUIh9j7zkFgmFTeGjiDgWCURrkcaj3uaLWUpoGnTQ/aCJKBkjQ==', { rememberMe }, handleTeste, handleError);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cookies = new Cookies();\r\n        const rememberMe = cookies.get('rememberMe');\r\n\r\n        if (ready === false) {\r\n            callApi('https://grileapiwin.azurewebsites.net/api/GetCategoriiWin?code=2PyRLKAmFmY9m2QCC2t3iRuMRwDF58dxkyYavc/eFowHS44pFQgrqA==', { rememberMe }, handleCategorii, handleError);\r\n            setReady(true);\r\n        }\r\n\r\n        let lista_temp = [];\r\n        let lista_temp2 = [];\r\n\r\n        for (let i = 0; i < listaCategorii.length; ++i) {\r\n            const lista_temp_temp = [];\r\n            for (let j = 0; j < listaCategorii[i].subCategory.length; ++j) {\r\n                lista_temp_temp.push(0);\r\n            }\r\n            lista_temp.push(lista_temp_temp);\r\n            lista_temp2.push(false);\r\n        }\r\n        setListaselectiisubcat(lista_temp);\r\n        setListaselectii(lista_temp2);\r\n    }, [listaCategorii, ready])\r\n\r\n    const deleteTest = (testId) => {\r\n        const cookies = new Cookies();\r\n        const rememberMe = cookies.get('rememberMe');\r\n        callApi('https://grileapiwin.azurewebsites.net/api/DeleteTestWin?code=E756BkprUyE3sBtZAU8ltkrwRebaSickMOE3NXaIv3cn3Ls8zNYQiA==', { rememberMe, testId }, () => { }, handleError)\r\n        setTimeout(function () {\r\n            callApi('https://grileapiwin.azurewebsites.net/api/ReturnTestWin?code=a4f9SUIh9j7zkFgmFTeGjiDgWCURrkcaj3uaLWUpoGnTQ/aCJKBkjQ==', { rememberMe }, handleTeste, handleError)\r\n        }, 1000)\r\n    }\r\n\r\n    const creeazaTest = () => {\r\n        const cookies = new Cookies();\r\n        const rememberMe = cookies.get('rememberMe');\r\n        const lista_categorii = [];\r\n        for (let i = 0; i < listaselectii.length; i++) {\r\n            for (let j = 0; j < listaselectiisubcat[i].length; j++) {\r\n                if (listaselectiisubcat[i][j] > 0) {\r\n                    lista_categorii.push({\r\n                        nume_categorie: listaCategorii[i]['category_Name'],\r\n                        nume_subcategorie: listaCategorii[i]['subCategory'][j]['name'],\r\n                        numar: listaselectiisubcat[i][j]\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        callApi('https://grileapiwin.azurewebsites.net/api/CreateTestWin?code=UWWieYZbXJombLLaR12BaLqCxfdBbHEz84QWnVaE/ZCVyCm2Fi9nvg==', { rememberMe, lista_categorii }, handleTestId, handleError)\r\n    }\r\n\r\n    const displayTestNou = () => {\r\n        return (\r\n            <>\r\n            {!ready? <CircularProgress/> :\r\n                <div className={classes.bookDiv}>\r\n                <Typography variant=\"h6\" component=\"h6\" className={classes.instructionsText}>\r\n                    2. Selectează cărțile, capitolele și subcapitolele:\r\n                </Typography>\r\n                <Grid\r\n                    className={classes.cardGrid}\r\n                    container\r\n                    justify=\"center\"\r\n                    spacing={4}\r\n                >\r\n                    <Grid item className={classes.bookLevel}>\r\n                        <TestsBookCard\r\n                            isSelected={isKumar}\r\n                            setCardSelected={setKumar}\r\n                            imagine={kumar}\r\n                            title=\"Kumar și Clark Medicină Clinică\"\r\n                        />\r\n                        {\r\n                            isKumar &&\r\n                            <Grow in={isKumar} timeout={growTimeout}>\r\n                                <div className={classes.bookSubcatDiv}>\r\n                                    <CategoryAcordion\r\n                                        onClickCategorieMare={onClickCategorieMare}\r\n                                        onClickSubCategorie={onClickSubCategorie}\r\n                                        listaselectii={listaselectii}\r\n                                        listaselectiisubcat={listaselectiisubcat}\r\n                                        setListaselectii={setListaselectii}\r\n                                        setListaselectiisubcat={setListaselectiisubcat}\r\n\r\n                                        data={listaCategorii}\r\n                                        book=\"Kumar\"\r\n                                    />\r\n                                </div>\r\n                            </Grow>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item className={classes.bookLevel}>\r\n                        <TestsBookCard\r\n                            isSelected={isLawrence}\r\n                            setCardSelected={setLawerence}\r\n                            imagine={lawrence}\r\n                            title=\"Chirurgie generală și specialități chirurgicale\"\r\n                        />\r\n                        {\r\n                            isLawrence &&\r\n                            <Grow\r\n                                in={isLawrence}\r\n                                timeout={growTimeout}\r\n                            >\r\n                                <div className={classes.bookSubcatDiv}>\r\n                                    <CategoryAcordion\r\n                                        onClickCategorieMare={onClickCategorieMare}\r\n                                        onClickSubCategorie={onClickSubCategorie}\r\n                                        listaselectii={listaselectii}\r\n                                        listaselectiisubcat={listaselectiisubcat}\r\n                                        setListaselectii={setListaselectii}\r\n                                        setListaselectiisubcat={setListaselectiisubcat}\r\n\r\n                                        data={listaCategorii}\r\n                                        book=\"Chirurgie\"\r\n                                    />\r\n                                </div>\r\n                            </Grow>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item className={classes.bookLevel}>\r\n                        <TestsBookCard\r\n                            isSelected={isSinopsis}\r\n                            setCardSelected={setSinopsis}\r\n                            imagine={sinopsis}\r\n                            title=\"Sinopsis de medicină\"\r\n                        />\r\n                        {\r\n                            isSinopsis &&\r\n                            <Grow in={isSinopsis} timeout={growTimeout}>\r\n                                <div className={classes.bookSubcatDiv}>\r\n                                    <CategoryAcordion\r\n                                        onClickCategorieMare={onClickCategorieMare}\r\n                                        onClickSubCategorie={onClickSubCategorie}\r\n                                        listaselectii={listaselectii}\r\n                                        listaselectiisubcat={listaselectiisubcat}\r\n                                        setListaselectii={setListaselectii}\r\n                                        setListaselectiisubcat={setListaselectiisubcat}\r\n\r\n                                        data={listaCategorii}\r\n                                        book=\"Sinopsis\"\r\n                                    />\r\n                                </div>\r\n                            </Grow>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </div>}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const displayTestNeterminat = () => {\r\n        return (\r\n            <>\r\n            {!ready? <CircularProgress/> :\r\n            <div>\r\n                <Typography variant=\"h6\" component=\"h6\" className={classes.instructionsText} >\r\n                    2. Selectează testul pe care dorești să îl continui:\r\n                </Typography>\r\n                <div>\r\n                    {\r\n                        <DataTable rows={listatTesteNeterm} onDelete={(id) => deleteTest(id) } onClick={(id) => handleTestId(id)} />\r\n                    }\r\n                </div>\r\n            </div>}\r\n            </>\r\n        )\r\n    }\r\n\r\n    const onClickCategorieMare = (i) => {\r\n        const lista_temp_selectii = [...listaselectii];\r\n        const lista_temporara_mare = [...listaselectiisubcat];\r\n        const lista_temporara = [...listaselectiisubcat[i]];\r\n        if (listaselectiisubcat[i].reduce((acc, value) => acc + value, 0) === listaCategorii[i].subCategory.reduce((acc, subcat) => acc + subcat.Count, 0)) {\r\n            for (let index = 0; index < listaselectiisubcat[i].length; index++) {\r\n                lista_temporara[index] = 0;\r\n            }\r\n            lista_temporara_mare[i] = lista_temporara;\r\n            setListaselectiisubcat(lista_temporara_mare);\r\n        }\r\n        else {\r\n            for (let index = 0; index < listaselectiisubcat[i].length; index++) {\r\n                lista_temporara[index] = listaCategorii[i].subCategory[index].Count;\r\n            }\r\n            lista_temporara_mare[i] = lista_temporara\r\n            setListaselectiisubcat(lista_temporara_mare);\r\n        }\r\n        lista_temp_selectii[i] = !listaselectii[i];\r\n        setListaselectii(lista_temp_selectii);\r\n    }\r\n\r\n    const onClickSubCategorie = (i, index, click = true, numGrile ) => {\r\n        const lista_temporara_mare = [...listaselectiisubcat];\r\n        const lista_temporara = [...listaselectiisubcat[i]];\r\n        if (click) {\r\n            if (lista_temporara[index] > 0) {\r\n                lista_temporara[index] = 0;\r\n            }\r\n            else{\r\n                lista_temporara[index] = listaCategorii[i].subCategory[index].Count;\r\n            }\r\n        }\r\n        else {\r\n            lista_temporara[index] = numGrile;\r\n        }\r\n        lista_temporara_mare[i] = lista_temporara;\r\n        setListaselectiisubcat(lista_temporara_mare);\r\n    }\r\n\r\n    const sumaElemArr = (array) => {\r\n        return array.reduce((acc, subArray) => acc + subArray.reduce((subAcc, value) => subAcc + value, 0), 0);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ErrorPopup errorStatus={error} />\r\n            <Container maxWidth=\"lg\" className={classes.containerPart}>\r\n\r\n                <Typography variant=\"h6\" component=\"h6\" className={classes.instructionsText}>\r\n                    1. Selectează tipul testului pe care vrei să îl începi:\r\n            </Typography>\r\n                <Grid\r\n                    className={classes.cardGrid}\r\n                    justify=\"center\"\r\n                    container\r\n                    spacing={3}\r\n                    id=\"testCard_div\"\r\n                >\r\n                    <Grid item >\r\n                        <TestsCard\r\n                            isSelected={isCardSelected === \"Test nou\"}\r\n                            setCardSelected={setCardSelected}\r\n                            imagine={testNouImg}\r\n                            title=\"Test nou\"\r\n                            text=\"Selectează subcapitolele din care dorești grilele.\"\r\n                            ready = {ready}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TestsCard\r\n                            isSelected={isCardSelected === \"Simulare\"}\r\n                            setCardSelected={setCardSelected}\r\n                            imagine={simulareImg}\r\n                            title=\"Simulare\"\r\n                            text=\"50 de întrebări cu CS și 150 de întrebări cu CM.\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TestsCard\r\n                            isSelected={isCardSelected === \"Teste neterminate\"}\r\n                            setCardSelected={setCardSelected}\r\n                            imagine={testNeterminatImg}\r\n                            title=\"Teste neterminate\"\r\n                            text=\"Selectează unul dintre testele neterminate pe care vrei să le continui.\"\r\n                            onClick={callApiTestNeterminat}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TestsCard\r\n                            isSelected={isCardSelected === \"Reparcurge greșeli\"}\r\n                            setCardSelected={setCardSelected}\r\n                            imagine={reparcurgeGreseliImg}\r\n                            title=\"Reparcurge greșeli\"\r\n                            text=\"Selectează subcapitolele din care ai greșeli pentru a-ți acoperi golurile.\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <div id=\"as vrea sa scrolez aici\"></div>\r\n                {\r\n                    (isCardSelected === \"Test nou\") &&\r\n                    <Grow\r\n                        id=\"bookCard_div\"\r\n                        in={isCardSelected === \"Test nou\"}\r\n                        timeout={growTimeout}\r\n                    >\r\n                        <div>{displayTestNou()}</div> \r\n                    </Grow>\r\n                }\r\n                {\r\n                    (isCardSelected === \"Simulare\") &&\r\n                    <Grow\r\n                        id=\"bookCard_div\"\r\n                        in={isCardSelected === \"Simulare\"}\r\n                        timeout={growTimeout}\r\n                    >\r\n                        <Typography>\r\n                            {isCardSelected}\r\n                        </Typography>\r\n                    </Grow>\r\n                }\r\n                {\r\n                    (isCardSelected === \"Teste neterminate\") &&\r\n                    <Grow\r\n                        id=\"bookCard_div\"\r\n                        in={isCardSelected === \"Teste neterminate\"}\r\n                        timeout={growTimeout}\r\n                    >\r\n        \r\n                        <div>{displayTestNeterminat()}</div>\r\n                    </Grow>\r\n                }\r\n                {\r\n                    (isCardSelected === \"Reparcurge greșeli\") &&\r\n                    <Grow\r\n                        id=\"bookCard_div\"\r\n                        in={isCardSelected === \"Reparcurge greșeli\"}\r\n                        timeout={growTimeout}\r\n                    >\r\n                        <Typography>\r\n                            {isCardSelected}\r\n                        </Typography>\r\n                    </Grow>\r\n                }\r\n            </Container>\r\n            {ready &&\r\n            <>\r\n            {\r\n            sumaElemArr(listaselectiisubcat) !== 0 &&\r\n            <Slide \r\n            in={(sumaElemArr(listaselectiisubcat)) > 0} \r\n            direction= \"up\" \r\n            className={classes.footer}>\r\n            <footer >\r\n                <Container maxWidth=\"lg\">\r\n                <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    spacing={4}\r\n                >\r\n                    <Grid className={classes.footerItem} item>\r\n                        \r\n                        <Typography variant=\"subtitle2\" component=\"p\">\r\n                            Tip test: {isCardSelected}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" component=\"p\">\r\n                            Număr de grile: {sumaElemArr(listaselectiisubcat)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.footerItem} item>\r\n                        <Button className={classes.footerButton} color=\"secondary\" variant=\"contained\" onClick={() => creeazaTest()} >\r\n                            <Typography >\r\n                                Ready Set GO!\r\n                            </Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </Container>\r\n            </footer>\r\n            </Slide>\r\n            }\r\n            </>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function NoMatch() {\r\n    return(\r\n        <Typography variant=\"h2\">Resursa căutată nu a fost găsită!</Typography>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n\r\nexport default function AnswerOptionCard(props){\r\n    const useStyles = makeStyles((theme) => ({\r\n        root:{\r\n            backgroundColor: props.darkMode? \"#5c5c5c\" : \"#fafafa\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            marginBottom: theme.spacing(0.5),\r\n        },\r\n        answerOption:{\r\n            backgroundColor: (props.isSelected[props.index] || (props.baza2Converter(props.items[props.selectedQuestion][\"Choices\"], props.index) ===1 ))? theme.palette.secondary.main : (props.darkMode? \"#5c5c5c\" : \"#fafafa\"),\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const abc = ['a)','b)','c)','d)','e)'];\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardActionArea \r\n            className={classes.answerOption}\r\n            disabled = {props.items[props.selectedQuestion][\"Choices\"] > 0}\r\n            onClick={()=> {props.handleQuestionSelection(props.index)}}\r\n            >\r\n                <CardContent>\r\n                    <Typography variant=\"body2\">\r\n                        {abc[props.index]} {props.answerOption}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <HelpOutlineIcon/>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AnswerOptionCard from '../componente/answerOptionCard';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { useLocation } from 'react-router-dom'\r\nimport Cookies from 'universal-cookie';\r\nimport { callApi } from \"../utils/callApi\";\r\nimport ErrorPopup from '../componente/errorPopup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\n\r\nexport default function GrilePage(props) {\r\n\r\n    const [selectedQuestion, setNextQuestion] = useState(0);\r\n    let isQuestionSelected = [false, false, false, false, false]\r\n    const [isSelected, setIsSelected] = useState(isQuestionSelected);\r\n    const [items, setItems] = useState([]);\r\n    const [error, setError] = useState(0);\r\n    const [isReady, setReady] = useState(false);\r\n    const { state } = useLocation();\r\n    const [showAnswer, setShowAnswer] = useState(false);\r\n    \r\n    let history= useHistory();\r\n\r\n    const handleItems = (e) => {\r\n        setItems(e.data[\"lista\"]);\r\n        setReady(true);\r\n    };\r\n\r\n    const handleError = (e) => {\r\n        setError(e);\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        const testId = state;\r\n        if(!testId){\r\n            history.push(\"/creeaza-ti_test\")\r\n        }else{\r\n        const cookies = new Cookies();\r\n        const rememberMe = cookies.get('rememberMe');\r\n        callApi('https://grileapiwin.azurewebsites.net/api/GetGrileWin?code=PrwHilYKYJLV46PoT12sMacgZkpYr7XsWKrjeZF3Hc9aSIZSqnsipQ==', { rememberMe, testId }, handleItems, handleError)\r\n        }\r\n    }, [history, state])\r\n\r\n    const handleNextQuestion = () => {\r\n        const nextQuestion = selectedQuestion + 1;\r\n        setNextQuestion(nextQuestion);\r\n        setIsSelected(isQuestionSelected);\r\n    };\r\n\r\n    const handlePreviousQuestion = () => {\r\n        if (selectedQuestion > 0) {\r\n            const previousQuestion = selectedQuestion - 1;\r\n            setNextQuestion(previousQuestion);\r\n            setIsSelected(isQuestionSelected);\r\n        }\r\n    };\r\n\r\n    const handleQuestionSelection = (index) => {\r\n        const temporaryList = isSelected\r\n        temporaryList[index] = !temporaryList[index];\r\n        setIsSelected([...temporaryList]);\r\n    }\r\n    const handleSliderChange = (_event, newValue) => {\r\n        setNextQuestion(newValue - 1);\r\n    };\r\n\r\n    const baza2Converter = (numar, pozitie) => {\r\n        return (parseInt(numar / Math.pow(2, 4 - pozitie)) % 2)\r\n    }\r\n\r\n    const trimiteRaspuns = (listaRaspunsuri, currentQuestion) => {\r\n        const cookies = new Cookies();\r\n        const rememberMe = cookies.get('rememberMe');\r\n        const testId = state;\r\n\r\n        if (items[selectedQuestion][\"Choices\"] === 0) {\r\n            let choice = 0;\r\n            let tempItems = items;\r\n            let correct = 0;\r\n\r\n            for (let i = 0; i < listaRaspunsuri.length; i++) {\r\n                choice += listaRaspunsuri[i] * Math.pow(2, 4 - i);\r\n                if ((listaRaspunsuri[i] === true && items[currentQuestion]['Raspunsuri'][i] === 1) || (listaRaspunsuri[i] === false && items[currentQuestion]['Raspunsuri'][i] === 0)) {\r\n                    correct += Math.pow(2, 4 - i);\r\n                }\r\n            }\r\n            tempItems[currentQuestion][\"Choices\"] = choice;\r\n            tempItems[currentQuestion][\"Correct\"] = correct;\r\n\r\n            const grilaId = items[currentQuestion][\"GrilaID\"];\r\n            let final_question = false;\r\n            if (currentQuestion === items.length - 1) {\r\n                final_question = true\r\n            }\r\n\r\n            callApi('https://grileapiwin.azurewebsites.net/api/UpdateQuestionWin?code=/exISg8MBjNHTzNt8dNAonkeqzYsV5Imgh5naOgP/7aPdlR06NS2xw==', { testId, rememberMe, grilaId, choice, correct, final_question }, () => { });\r\n            setItems(tempItems.slice());\r\n        }\r\n        else {\r\n            handleNextQuestion();\r\n        }\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            marginTop: theme.spacing(8),\r\n            marginBottom: theme.spacing(4),\r\n        },\r\n        smallPaper: {\r\n            padding: theme.spacing(2),\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(2),\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        },\r\n        question: {\r\n            paddingTop: theme.spacing(3),\r\n            padding: theme.spacing(1),\r\n            paddingBottom: theme.spacing(3),\r\n        },\r\n        cardVariante: {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            marginBottom: theme.spacing(0.5),\r\n        },\r\n        butonDiv: {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            marginTop: theme.spacing(3),\r\n            justifyContent: \"space-between\",\r\n        },\r\n        slider: {\r\n            marginTop: theme.spacing(3),\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n\r\n    }));\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <ErrorPopup errorStatus={error} />\r\n        <Container maxWidth=\"lg\">\r\n            {   !isReady? <CircularProgress/> :\r\n                <Grid direction=\"row\" spacing={1} >\r\n                    <Grid item >\r\n                        <Paper className={classes.paper}>\r\n                            <div className={classes.slider}>\r\n                                <IconButton\r\n                                    onClick={handlePreviousQuestion}\r\n                                    disabled={selectedQuestion === 0 ? true : false}\r\n                                >\r\n\r\n                                    <ChevronLeftIcon />\r\n                                </IconButton>\r\n\r\n                                <Slider\r\n                                    onChange={handleSliderChange}\r\n                                    value={selectedQuestion + 1}\r\n                                    marks\r\n                                    step={1}\r\n                                    min={1}\r\n                                    max={items.length}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                >\r\n                                </Slider>\r\n                                <IconButton\r\n                                    onClick={handleNextQuestion}\r\n                                    disabled={selectedQuestion + 1 === items.length ? true : false}\r\n                                >\r\n                                    <ChevronRightIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className={classes.question}>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                    Capitol: {items[selectedQuestion][\"Categorie\"]}; Subcapitol: {items[selectedQuestion][\"SubCategorie\"]}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" className=\"grileQuestionTypography\">\r\n                                    {selectedQuestion + 1}. {items[selectedQuestion]['Intrebare']}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                {items[selectedQuestion]['Variante'].map((answerOption, index) => (\r\n                                    <AnswerOptionCard\r\n                                        key={index}\r\n                                        index={index}\r\n                                        answerOption={answerOption}\r\n                                        darkMode={props.darkMode}\r\n                                        handleQuestionSelection={handleQuestionSelection}\r\n                                        baza2Converter={baza2Converter}\r\n                                        items={items}\r\n                                        isSelected={isSelected}\r\n                                        selectedQuestion={selectedQuestion}\r\n                                        showAnswer={showAnswer}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <div className={classes.butonDiv}>\r\n                                <Button \r\n                                variant=\"contained\" \r\n                                color=\"secondary\" \r\n                                onClick={() => trimiteRaspuns(isSelected, selectedQuestion)} \r\n                                disabled={((isSelected.reduce((a, b) => a + b, 0)) === 0 && items[selectedQuestion][\"Choices\"] === 0) || (selectedQuestion + 1 === items.length) }>\r\n                                    {\r\n                                        (items[selectedQuestion][\"Choices\"] === 0) &&\r\n                                        <Typography>\r\n                                            Trimite răspuns\r\n                                        </Typography>\r\n                                    }\r\n                                    {\r\n                                        (items[selectedQuestion][\"Choices\"] > 0) && \r\n                                        <Typography>\r\n                                            Următoarea grilă\r\n                                        </Typography>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"primary\">\r\n                                    <Typography>\r\n                                        Finalizează testul\r\n                                    </Typography>\r\n                                </Button>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Paper>\r\n                            <Grid container justify=\"space-evenly\">\r\n                                <Grid item className={classes.statisticSubdiv}>\r\n                                    <div className={classes.smallPaper}>\r\n                                        <Typography>Afișează răspunsurile</Typography>\r\n                                        <Switch checked={showAnswer} onChange={()=>{setShowAnswer(!showAnswer)}} />\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item className={classes.statisticSubdiv}>\r\n                                    <div className={classes.smallPaper}>\r\n                                        <Typography>Răspunsuri date</Typography>\r\n                                        <Typography>{items.reduce((acc, val) => acc + (val[\"Choices\"] > 0), 0)}/{items.length}</Typography>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item className={classes.statisticSubdiv}>\r\n                                    <div className={classes.smallPaper}>\r\n                                        <Typography>Răspunsuri corecte</Typography>\r\n                                    <Typography>{items.reduce((acc, val) => acc + (val[\"Correct\"] === 31), 0)}/{items.length}</Typography>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item className={classes.statisticSubdiv}>\r\n                                    <div className={classes.smallPaper}>\r\n                                        <Typography>Răspunsuri greșite</Typography>\r\n                                    <Typography>{items.reduce((acc, val) => acc + (val[\"Correct\"] !== 31 && val[\"Choices\"] > 0), 0)}/{items.length}</Typography>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        </Container>\r\n        </>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo4.a4b0b984.svg\";","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport logo from '../poze/logo4.svg';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\nimport { callApi } from '../utils/callApi';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logoBox: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: \"25px\",\r\n        paddingLeft: \"10px\",\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    let cookieRemember = new Cookies();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [apare_aicont, setapare_aicont] = useState(true);\r\n    const [rememberMe, setRememberMe] = useState(cookieRemember.get('rememberMe') === 'true' ? true : false);\r\n    const [error, setError] = useState(0);\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const rememberChange = () => {\r\n        setRememberMe(!rememberMe);\r\n        cookieRemember.set('rememberMe', !rememberMe, { path: '/', maxAge: 2592000 });\r\n    }\r\n\r\n\r\n    const callLoginApi = () => {\r\n        callApi(\"https://grileapiwin.azurewebsites.net/api/Login?code=D2p6Wi0brJT9iDnRObOnEfKqJLZbEhKse5Ze0ac9T745hJSuyiimuQ==\", { email, password, tip_login: \"autohton\", rememberMe }, handleLogin, handleError)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        const cookies = new Cookies();\r\n        let rememberMeSeconds = rememberMe ? 2592000 : 43200;\r\n        const firstname = e.data['first_name'];\r\n        const lastname = e.data['last_name'];\r\n        const plan = e.data['plan'];\r\n        const accessToken = e.data['access']\r\n        cookies.set('estiLogat', \"rapid\", { path: '/', maxAge: rememberMeSeconds });\r\n        cookies.set('firstname', firstname, { path: '/', maxAge: rememberMeSeconds });\r\n        cookies.set('lastname', lastname, { path: '/', maxAge: rememberMeSeconds });\r\n        cookies.set('plan', plan, { path: '/', maxAge: rememberMeSeconds });\r\n        cookies.set('accessToken', accessToken, { path: '/', maxAge: rememberMeSeconds });\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const handleError = (e) => {\r\n        setError(e);\r\n        setapare_aicont(true);\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Box className={classes.logoBox}>\r\n                    <img\r\n                        src={logo}\r\n                        alt=\"logo\"\r\n                    />\r\n                </Box>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"E-mail\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={email}\r\n                        onInput={e => setEmail(e.target.value)}\r\n                        error={error === 400}\r\n\r\n                    />\r\n                    <TextField\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Parolă\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onInput={e => setPassword(e.target.value)}\r\n                        onKeyPress={e => {\r\n                            if (e.key === \"Enter\") {\r\n                                callLoginApi(history);\r\n                            }\r\n                        }}\r\n                        error={error === 400}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={rememberMe} onChange={() => rememberChange()} value=\"remember\" color=\"secondary\" />}\r\n                        label=\"Ține-mă minte\"\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.submit}\r\n                        onClick={callLoginApi}\r\n                        disabled={!apare_aicont}\r\n                    >\r\n                        <Typography>\r\n                            Autentificare\r\n            </Typography>\r\n                    </Button>\r\n                    {apare_aicont &&\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link color=\"secondary\" href=\"#\" variant=\"body2\">\r\n                                    Ai uitat parola?\r\n              </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link color=\"secondary\" href=\"/signup\" variant=\"body2\">\r\n                                    {\"Nu ai cont? Creează cont\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </form>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport logo from '../poze/logo4.svg';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  logoBox: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    borderRadius: \"25px\",\r\n    paddingLeft: \"10px\",\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport default function SignUp() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [apare_aicont, setapare_aicont] = useState(true);\r\n  const [incompleteFields, setIncompleteFields] = useState(false);\r\n  const [errorPwd, setErrorPwd] = useState(false);\r\n  const [error, setError] = useState(0);\r\n\r\n  console.log(errorPwd);\r\n  console.log(password);\r\n  console.log(repeatPassword);\r\n  const callSigupApi = ()=>{\r\n        if(firstName === \"\" || lastName === \"\" || email === \"\"){\r\n            setIncompleteFields(true);\r\n        }else{\r\n            setIncompleteFields(false);\r\n            if(password !== repeatPassword || password.length < 8){\r\n                setErrorPwd(true);\r\n            }else{\r\n                setErrorPwd(false);\r\n            }\r\n            if(!errorPwd){\r\n                console.log(\"Prenume:\", firstName);\r\n                console.log(\"Nume:\", lastName);\r\n                console.log(\"Email:\", email);\r\n                console.log(\"Parola:\", password);\r\n                console.log(\"repeta parola:\", repeatPassword);\r\n            }\r\n    }\r\n    }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Box className={classes.logoBox}>\r\n            <img \r\n                src={logo} \r\n                alt=\"logo\" \r\n            />\r\n        </Box>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                color=\"secondary\"\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"Prenume\"\r\n                autoFocus\r\n                value={firstName}\r\n                onInput={e => setFirstName(e.target.value)} \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Nume\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={lastName}\r\n                onInput={e => setLastName(e.target.value)} \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"E-mail\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onInput={e => setEmail(e.target.value)} \r\n                error={error === 400}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Parolă\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onInput={e => setPassword(e.target.value)} \r\n                error={errorPwd}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"repeatPassword\"\r\n                label=\"Repetă parola\"\r\n                type=\"password\"\r\n                id=\"repeatPassword\"\r\n                value={repeatPassword}\r\n                onInput={e => setRepeatPassword(e.target.value)}\r\n                error={errorPwd} \r\n              />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n            onClick={()=>{callSigupApi()}}\r\n          >\r\n            Creează cont!\r\n          </Button>\r\n          <Grid container >\r\n            {incompleteFields &&\r\n                <Grid item>\r\n                    <Typography variant=\"subtitle1\" color=\"error\" >\r\n                        Nu ai completat toate câmpurile!\r\n                    </Typography>\r\n            </Grid>\r\n            }\r\n            {errorPwd &&\r\n            <Grid item>\r\n              <Typography variant=\"subtitle1\" color=\"error\" >\r\n                Parolele nu coincid sau lungimea parolei este mai mică de 8 caractere.\r\n              </Typography>\r\n            </Grid>\r\n            }\r\n          </Grid>\r\n          <Grid container justify=\"flex-end\">\r\n            {apare_aicont &&\r\n            <Grid item>\r\n              <Link  href=\"/login\" variant=\"body2\" color=\"secondary\">\r\n                Deja ai cont? Autentifică-te\r\n              </Link>\r\n            </Grid>\r\n            }\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n  );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { AppBar, Typography, Toolbar, makeStyles, Button, ButtonGroup, IconButton, Link, Box, Grid  } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport logo from '../poze/logo4.svg';\r\nimport clsx from 'clsx';\r\nimport { useLocation } from 'react-router';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\nimport LibraryBooksRoundedIcon from '@material-ui/icons/LibraryBooksRounded';\r\nimport MenuBookRoundedIcon from '@material-ui/icons/MenuBookRounded';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    main:{\r\n    },\r\n    rootNavBar: {\r\n        height: theme.spacing(8),\r\n    },\r\n    logoGroup:{\r\n        flexGrow:1\r\n    },\r\n    logo: {\r\n        height: \"60px\", \r\n        cursor: \"pointer\",\r\n    },\r\n    menuButton: {\r\n      flexGrow: 1,\r\n      justifyContent: 'flex-end',\r\n      alignItems:\"center\",\r\n      display:\"flex\",\r\n    },\r\n    menuButtonTel: {\r\n        flexGrow: 1,\r\n        justifyContent: 'center',\r\n        alignItems:\"center\",\r\n        display:\"flex\",\r\n        margin: theme.spacing(4,2,0) ,\r\n      },\r\n    list: {\r\n        width: 250,\r\n      },\r\n      fullList: {\r\n        width: 'auto',\r\n      },\r\n  }));\r\n\r\n\r\nexport default function LayoutSite(props) {\r\n    const cookies = new Cookies();\r\n    let name = cookies.get('firstname');\r\n    let location = useLocation();\r\n\r\n    const classes = useStyles();\r\n    const [mobileView, setMobileView] = useState(false);\r\n    const [deschis, setDeschis] = React.useState(false);\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n        return;\r\n        }\r\n        setDeschis(open);\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n        className={clsx(classes.list, {\r\n            [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n        })}\r\n        role=\"presentation\"\r\n        onClick={toggleDrawer(anchor, false)}\r\n        onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <div className = {classes.menuButtonTel}>\r\n                <ButtonGroup aria-label=\"outlined secondary button group\" orientation=\"vertical\">\r\n                    <Button disableElevation variant=\"outlined\" onClick={()=> {\r\n                            props.setDarkMode(!props.darkMode);\r\n                            localStorage.setItem('darkMode', !props.darkMode);\r\n                        }}  >\r\n                        {\r\n                            props.darkMode && \r\n                            <Brightness7Icon />\r\n                        }\r\n                        {\r\n                            !props.darkMode && \r\n                            <>\r\n                                <Brightness2Icon/>\r\n                            </>\r\n                        }\r\n                    </Button>\r\n                    <Button \r\n                    disableElevation\r\n                    startIcon={<MenuBookRoundedIcon/>}\r\n                    variant={(location.pathname === \"/creeaza-ti_test\")? \"contained\": \"outlined\"} \r\n                    href=\"/creeaza-ti_test\" > \r\n                        <Typography variant=\"h6\" > \r\n                            Test \r\n                        </Typography> \r\n                    </Button>\r\n                    <Button\r\n                    disableElevation\r\n                    startIcon= {<LibraryBooksRoundedIcon/>}\r\n                    variant={(location.pathname === \"/librarie\")? \"contained\": \"outlined\"} \r\n                    href=\"/librarie\"> \r\n                        <Typography variant=\"h6\" > \r\n                            Librărie \r\n                        </Typography> \r\n                    </Button>\r\n                    <Button \r\n                    startIcon={<AccountBoxRoundedIcon/>}\r\n                    disableElevation \r\n                    variant={location.pathname === \"/profil\"? \"contained\":\"outlined\"} \r\n                    href=\"/profil\">\r\n                        <Typography variant=\"h6\" align=\"center\">Nume Prenume</Typography>  \r\n                    </Button>        \r\n                </ButtonGroup>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    useEffect(() => {\r\n    const setResponsiveness = () => {\r\n        return window.innerWidth < 650\r\n        ? setMobileView(true)\r\n        : setMobileView(false);\r\n    };\r\n\r\n    setResponsiveness();\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n\r\n    return () => {\r\n        window.removeEventListener(\"resize\", () => setResponsiveness());\r\n    }\r\n    }, []);\r\n\r\n    const displayDesktop = ()=>{\r\n        return(\r\n            <Toolbar>\r\n                <div className={classes.logoGroup}>\r\n                    <Link href=\"/\">\r\n                        <img \r\n                            src={logo} \r\n                            alt=\"logo\" \r\n                            className={classes.logo}\r\n                        />\r\n                    </Link>\r\n                </div>\r\n                <div className = {classes.menuButton}>\r\n                    <ButtonGroup aria-label=\"outlined secondary button group\">\r\n                        <Button disableElevation variant=\"outlined\" onClick={()=> {\r\n                                props.setDarkMode(!props.darkMode);\r\n                                localStorage.setItem('darkMode', !props.darkMode);\r\n                            }}  >\r\n                            {\r\n                                props.darkMode && \r\n                                <WbSunnyIcon />\r\n                            }\r\n                            {\r\n                                !props.darkMode && \r\n                                <>\r\n                                    <Brightness2Icon/>\r\n                                </>\r\n                            }\r\n                        </Button>\r\n                        <Button \r\n                        disableElevation\r\n                        startIcon={<MenuBookRoundedIcon/>}\r\n                        variant={(location.pathname === \"/creeaza-ti_test\")? \"contained\": \"outlined\"} \r\n                        href=\"/creeaza-ti_test\" > \r\n                            <Typography variant=\"h6\" > \r\n                                Test \r\n                            </Typography> \r\n                        </Button>\r\n                        <Button\r\n                        disableElevation\r\n                        startIcon= {<LibraryBooksRoundedIcon/>}\r\n                        variant={(location.pathname === \"/librarie\")? \"contained\": \"outlined\"} \r\n                        href=\"/librarie\"> \r\n                            <Typography variant=\"h6\" > \r\n                                Librărie \r\n                            </Typography> \r\n                        </Button>\r\n                        <Button \r\n                        startIcon={<AccountBoxRoundedIcon/>}\r\n                        disableElevation \r\n                        variant={location.pathname === \"/profil\"? \"contained\":\"outlined\"} \r\n                        href=\"/profil\">\r\n                            <Typography variant=\"h6\" align=\"center\">{name}</Typography>  \r\n                        </Button>        \r\n                    </ButtonGroup>\r\n                </div>\r\n            </Toolbar>\r\n        )\r\n    }\r\n    const displayMobileView = ()=>{\r\n        return(\r\n            <Toolbar>\r\n                <Link href=\"/\">\r\n                    <img \r\n                        src={logo} \r\n                        alt=\"logo\" \r\n                        className={classes.logo}\r\n                    />\r\n                </Link>\r\n                <div className={classes.menuButton}>\r\n                    <IconButton onClick={toggleDrawer(\"right\", true)}>\r\n                        <MenuRoundedIcon/>\r\n                    </IconButton>\r\n                    <Drawer anchor={\"right\"} open={deschis} onClose={toggleDrawer(\"right\", false)}>\r\n                    {list(\"right\")}\r\n                    </Drawer>\r\n                </div>\r\n            </Toolbar>\r\n        )\r\n    }\r\n    return(\r\n        <Box \r\n        className={classes.main}\r\n        component=\"main\"            \r\n        >\r\n            {\r\n            !(location.pathname.includes(\"/login\") || location.pathname.includes(\"/signup\") ) &&\r\n            <AppBar className={classes.rootNavBar} position=\"relative\" elevation={0}  >\r\n                {mobileView ? displayMobileView() : displayDesktop()} \r\n            </AppBar>\r\n            }\r\n            <Grid>\r\n                {props.children}\r\n            </Grid>\r\n            \r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nexport default function ProfilePage() {\r\n    let history = useHistory();\r\n    \r\n    const delogare = () => {\r\n        const cookies = new Cookies();\r\n        cookies.remove('estiLogat');\r\n        cookies.remove('accessToken');\r\n        cookies.remove('plan');\r\n        cookies.remove('firstname');\r\n        cookies.remove('lastname');\r\n        history.push('/login')\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <Typography variant=\"h2\">Profil </Typography>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => delogare()}> Logout </Button>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nfunction ProtectedRoute (props){\r\n    const cookie = new Cookies();\r\n\r\n    return(\r\n        <Route \r\n            render={()=>{\r\n                if(cookie.get(\"estiLogat\") === \"rapid\"){\r\n                    return(\r\n                        props.children\r\n                    )\r\n                }else{\r\n                    return(\r\n                        <Redirect to=\"/login\"/>\r\n                    )\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function DespreNoi(){\r\n    return(\r\n        <div>\r\n            <Typography>\r\n                Cateva date despre noi\r\n            </Typography>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Termeni(){\r\n    return(\r\n        <div>\r\n            <Typography>\r\n                Termeni si conditii\r\n            </Typography>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Intrebari(){\r\n    return(\r\n        <div>\r\n            <Typography>\r\n                Intrebari frecvente:\r\n            </Typography>\r\n        </div>\r\n    )\r\n}","import './App.css';\r\nimport React,{ useState } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport HomePage from './pagini/homePage';\r\nimport LibrariePage from './pagini/librariePage';\r\nimport TestePage from './pagini/testePage';\r\nimport NoMatch from './pagini/noMatch';\r\nimport GrilePage from './pagini/grilePage';\r\nimport LoginPage from './pagini/loginPage';\r\nimport SignupPage from './pagini/signupPage';\r\nimport LayoutSite from './componente/layoutSite';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport ProfilePage from './pagini/profilePage';\r\nimport ProtectedRoute from './utils/protectedRoute';\r\nimport DespreNoi from './pagini/despreNoi';\r\nimport Termeni from './pagini/termeni';\r\nimport Intrebari from './pagini/intrebari';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [darkMode, setDarkMode] = useState( localStorage.getItem(\"darkMode\") === \"false\"? false: true);\r\n\r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      button: {\r\n        textTransform:'none',\r\n      },\r\n    },\r\n    palette: {\r\n      divider: darkMode? \"rgba(255, 255, 255, 0.5)\" :\"rgba(0, 0, 0, 0.12)\",\r\n      background:{\r\n        default: darkMode? \"#303030\":\"#fafafa\",\r\n        paper: darkMode? \"#424242\": \"#eeeeee\",\r\n      },\r\n      type: darkMode? \"dark\":\"light\",\r\n      text: {\r\n        primary: darkMode? \"#fff\": \"#000\"\r\n      },\r\n      primary: {\r\n        main: darkMode? \"#145DA0\":\"#2E8BC0\",\r\n        contrastText: darkMode? '#fff': \"#000\",\r\n      },\r\n      secondary: {\r\n        main: '#FA9C4F',\r\n        contrastText: darkMode? '#fff':\"#000\",\r\n      },\r\n    },\r\n  });\r\n  \r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline/>\r\n      <Router>\r\n        <LayoutSite darkMode= {darkMode} setDarkMode={setDarkMode} >\r\n          <Switch>\r\n            <Route path=\"/login\" exact component={LoginPage} />\r\n            <Route path=\"/signup\" exact component={SignupPage} />\r\n            <ProtectedRoute>\r\n              <Switch>\r\n              <Route path=\"/\" exact component={HomePage} />\r\n              <Route path=\"/profil\" exact component={ProfilePage} />\r\n              <Route path=\"/librarie\" exact component={LibrariePage} />\r\n              <Route path=\"/creeaza-ti_test\" exact component={TestePage} />\r\n              <Route path=\"/rezolva_test\" exact component={()=> <GrilePage darkMode={darkMode} ></GrilePage>} />\r\n              <Route path=\"/despre_noi\" exact component={DespreNoi}/>\r\n              <Route path=\"/termeni\" exact component={Termeni}/>\r\n              <Route path=\"/intrebari_frecvente\" exact component={Intrebari}/>\r\n              <Route component={NoMatch}/>\r\n              </Switch>\r\n            </ProtectedRoute>\r\n          </Switch>\r\n        </LayoutSite>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}